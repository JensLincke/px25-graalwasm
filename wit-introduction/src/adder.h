// Generated by `wit-bindgen` 0.42.1. DO NOT EDIT!
#ifndef __BINDINGS_ADDER_H
#define __BINDINGS_ADDER_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

typedef struct adder_string_t {
  uint8_t*ptr;
  size_t len;
} adder_string_t;

typedef uint8_t exports_docs_adder_simple_role_t;

#define EXPORTS_DOCS_ADDER_SIMPLE_ROLE_FIRST 0
#define EXPORTS_DOCS_ADDER_SIMPLE_ROLE_SECOND 1
#define EXPORTS_DOCS_ADDER_SIMPLE_ROLE_THIRD 2

typedef struct {
  uint8_t *ptr;
  size_t len;
} adder_list_u8_t;

typedef struct {
  bool is_some;
  adder_list_u8_t val;
} adder_option_list_u8_t;

typedef struct exports_docs_adder_simple_customer_t {
  uint64_t   id;
  adder_string_t   name;
  adder_option_list_u8_t   activity;
  exports_docs_adder_simple_role_t   job_type;
} exports_docs_adder_simple_customer_t;

// Exported Functions from `docs:adder/simple@0.1.0`
uint32_t exports_docs_adder_simple_add_int(uint32_t x, uint32_t y);
float exports_docs_adder_simple_add_str(float x, float y);
double exports_docs_adder_simple_add_double(double x, double y);
void exports_docs_adder_simple_concat(adder_string_t *x, adder_string_t *y, adder_string_t *ret);
void exports_docs_adder_simple_reverse(adder_string_t *x, adder_string_t *ret);

// Helper Functions

void adder_list_u8_free(adder_list_u8_t *ptr);

void adder_option_list_u8_free(adder_option_list_u8_t *ptr);

void exports_docs_adder_simple_customer_free(exports_docs_adder_simple_customer_t *ptr);

// Transfers ownership of `s` into the string `ret`
void adder_string_set(adder_string_t *ret, const char*s);

// Creates a copy of the input nul-terminate string `s` and
// stores it into the component model string `ret`.
void adder_string_dup(adder_string_t *ret, const char*s);

// Deallocates the string pointed to by `ret`, deallocating
// the memory behind the string.
void adder_string_free(adder_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
